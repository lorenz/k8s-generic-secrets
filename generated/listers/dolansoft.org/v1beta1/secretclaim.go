// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "git.dolansoft.org/dolansoft/k8s-generic-secrets/apis/dolansoft.org/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SecretClaimLister helps list SecretClaims.
// All objects returned here must be treated as read-only.
type SecretClaimLister interface {
	// List lists all SecretClaims in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.SecretClaim, err error)
	// SecretClaims returns an object that can list and get SecretClaims.
	SecretClaims(namespace string) SecretClaimNamespaceLister
	SecretClaimListerExpansion
}

// secretClaimLister implements the SecretClaimLister interface.
type secretClaimLister struct {
	indexer cache.Indexer
}

// NewSecretClaimLister returns a new SecretClaimLister.
func NewSecretClaimLister(indexer cache.Indexer) SecretClaimLister {
	return &secretClaimLister{indexer: indexer}
}

// List lists all SecretClaims in the indexer.
func (s *secretClaimLister) List(selector labels.Selector) (ret []*v1beta1.SecretClaim, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.SecretClaim))
	})
	return ret, err
}

// SecretClaims returns an object that can list and get SecretClaims.
func (s *secretClaimLister) SecretClaims(namespace string) SecretClaimNamespaceLister {
	return secretClaimNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SecretClaimNamespaceLister helps list and get SecretClaims.
// All objects returned here must be treated as read-only.
type SecretClaimNamespaceLister interface {
	// List lists all SecretClaims in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.SecretClaim, err error)
	// Get retrieves the SecretClaim from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.SecretClaim, error)
	SecretClaimNamespaceListerExpansion
}

// secretClaimNamespaceLister implements the SecretClaimNamespaceLister
// interface.
type secretClaimNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SecretClaims in the indexer for a given namespace.
func (s secretClaimNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.SecretClaim, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.SecretClaim))
	})
	return ret, err
}

// Get retrieves the SecretClaim from the indexer for a given namespace and name.
func (s secretClaimNamespaceLister) Get(name string) (*v1beta1.SecretClaim, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("secretclaim"), name)
	}
	return obj.(*v1beta1.SecretClaim), nil
}
